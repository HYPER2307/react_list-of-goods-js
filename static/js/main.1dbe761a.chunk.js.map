{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","isRevers","setIsRevers","goods","sortType","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMMA,EAAsB,WACtBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EA5BR,SAA0BA,EAAOC,EAAUH,GACzC,IAAMI,EAAa,YAAOF,GAoB1B,OAlBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAOOO,CAAiBhB,EAAiBG,EAAWE,GAO3D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaN,IAC5BqB,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAC9B,WAAYjB,IAAcL,KAJ9B,iCAUA,wBACEoB,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CACjC,WAAYjB,IAAcJ,KAJ9B,4BAUA,wBACEmB,QAAS,kBAAMZ,GAAaD,IAC5Bc,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CACjC,YAAyB,IAAbf,KAJhB,sBAWiB,KAAdF,GAAoBE,IAEnB,wBACEa,QA1CE,WACZd,EAAa,IACbE,GAAY,IAyCFa,KAAK,SACLF,UAAU,4BAHZ,sBAWN,6BACGV,EAAMc,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCzGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1dbe761a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, sortType, isRevers) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isRevers) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isRevers, setIsRevers] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, sortField, isRevers);\n\n  const reset = () => {\n    setSortField('');\n    setIsRevers(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={`button is-info ${cn({\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${cn({\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsRevers(!isRevers)}\n          type=\"button\"\n          className={`button is-warning ${cn({\n            'is-light': isRevers === false,\n          })}`}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField !== '' || isRevers)\n          && (\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}